<?php


namespace Wikimedia\ForwardScript;

/**
 * Value object for the information generated by the python script
 * @package Wikimedia\ForwardScript
 */
class PageInformation {

	private $category = "";

	private $idWasFound = false;

	private $idIsValid = false;

	private $hasDuplicateIds = false;

	private $hasImage = false;

	public function __construct( \stdClass $info ) {
		$this->category = empty( $info->category ) ? "" : preg_replace(
			'/^(:?Category|Kategorie):/',
			'',
			$info->category
		);
		$this->idWasFound = empty( $info->id_not_found );
		$this->idIsValid = !empty( $info->valid_id );
		$this->hasDuplicateIds = !empty( $info->duplicate_ids );
		$this->hasImage = !empty( $info->image_exists );
	}

	/**
	 * Check if the wikipage text contained a usable ID.
	 *
	 * "Usable" means existing in the supported templates in the wiki text and unique in the wiki text.
	 * @return bool
	 */
	public function hasUsableId() {
		return $this->idWasFound && !$this->hasDuplicateIds;
	}

	/**
	 * Check if the ID is marked as an official valid id
	 *
	 * @return bool
	 */
	public function hasValidId() {
		return $this->idIsValid;
	}

	/**
	 * @return string
	 */
	public function getCategory() {
		return $this->category;
	}

	/**
	 * When the template has a usable ID and an image is already inserted.
	 *
	 * @return boolean
	 */
	public function hasImage() {
		return $this->hasImage;
	}
}
